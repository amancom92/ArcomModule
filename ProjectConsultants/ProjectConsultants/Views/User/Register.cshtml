@model ProjectConsultants.UI.ViewModel.RegisterViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/bundles/UserDefinedCss")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")   
    <title>Registration</title>
</head>
<body>
    <div class="header">    
        <img class="img_register" src="~/Content/Images/logo.png" />
    </div>
    <hr class="hr_css" />
    <div>
        <h3 class="heading"> Register</h3>
    </div>
    @using (Html.BeginForm())
    {
        <div>
            <div class="textField">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-field-css mainreg ", placeholder = "First Name*" } })
                @Html.ValidationMessageFor(model => model.FirstName ,null, new { @class = "ValidationMessage" })
            </div>
            <div class="textField">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-field-css", placeholder = "Last Name*" } })
                @Html.ValidationMessageFor(model => model.LastName, null, new { @class = "ValidationMessage" })
            </div>
            <div class="textField">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-field-css", placeholder = "Email*",id="emailvalidate" } })
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "ValidationMessage" })
                <span id="email"/>
            </div>
            <div class="textField">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-field-css", placeholder = "Password*" } })
                @Html.ValidationMessageFor(model => model.Password, null, new { @class = "ValidationMessage" })
            </div>
            <div class="textField">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-field-css", placeholder = "Confirm Password*" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "ValidationMessage" })
            </div>
            <div class="textField">
                @Html.DropDownListFor(m => m.SecurityQuestionId, Model.SecurityQuestionList, "Security Question", new { @class = "form-field-css"})
            </div>
            <div class="textField">
                @Html.EditorFor(model => model.SecurityQuestionAnswer, new { htmlAttributes = new { @class = "form-field-css", placeholder = "Answer*" } })
                @Html.ValidationMessageFor(model => model.SecurityQuestionAnswer, null, new { @class = "ValidationMessage" })
            </div>
            <div class="textField">
                <input class="signup" type="submit" value="sign up" />
            </div>
        </div>
    }
    
</body>


</html>
